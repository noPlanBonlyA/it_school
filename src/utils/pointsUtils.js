// src/utils/pointsUtils.js

import { createPointsHistory, POINT_REASONS } from '../services/coinHistoryService';
import { createNotificationForStudent } from '../services/notificationService';

/**
 * –°–æ–∑–¥–∞–µ—Ç –∑–∞–ø–∏—Å—å –≤ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏–Ω—Ç–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç—É
 * @param {string} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å—Ç—É–¥–µ–Ω—Ç–∞)
 * @param {string} reason - –ü—Ä–∏—á–∏–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–∏–Ω—Ç–æ–≤ (–∏–∑ POINT_REASONS)
 * @param {number} changedPoints - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–º–µ–Ω–∏–≤—à–∏—Ö—Å—è –ø–æ–∏–Ω—Ç–æ–≤ (–º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º)
 * @param {string} description - –û–ø–∏—Å–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
 * @returns {Promise<Object>} –°–æ–∑–¥–∞–Ω–Ω–∞—è –∑–∞–ø–∏—Å—å –∏—Å—Ç–æ—Ä–∏–∏
 */
export const addPointsHistoryWithNotification = async (userId, reason, changedPoints, description) => {
  try {
    // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ –∏—Å—Ç–æ—Ä–∏–∏
    const historyEntry = await createPointsHistory({
      user_id: userId,
      reason: reason,
      changed_points: changedPoints,
      description: description
    });

    // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞
    const notificationContent = createPointsNotificationContent(reason, changedPoints, description);
    
    await createNotificationForStudent(userId, notificationContent);

    return historyEntry;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏–Ω—Ç–æ–≤ —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º:', error);
    throw error;
  }
};

/**
 * –°–æ–∑–¥–∞–µ—Ç —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–∏–Ω—Ç–æ–≤
 * @param {string} reason - –ü—Ä–∏—á–∏–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è
 * @param {number} changedPoints - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–º–µ–Ω–∏–≤—à–∏—Ö—Å—è –ø–æ–∏–Ω—Ç–æ–≤
 * @param {string} description - –û–ø–∏—Å–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
 * @returns {string} –¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 */
const createPointsNotificationContent = (reason, changedPoints, description) => {
  const isPositive = changedPoints > 0;
  const pointsText = Math.abs(changedPoints) === 1 ? '–º–æ–Ω–µ—Ç—É' : 
                    (Math.abs(changedPoints) < 5 ? '–º–æ–Ω–µ—Ç—ã' : '–º–æ–Ω–µ—Ç');
  
  const action = isPositive ? '–ø–æ–ª—É—á–∏–ª–∏' : '–ø–æ—Ç—Ä–∞—Ç–∏–ª–∏';
  const emoji = isPositive ? 'üí∞' : 'üí∏';

  let reasonText = '';
  switch (reason) {
    case POINT_REASONS.HOMEWORK:
      reasonText = isPositive ? '–∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è' : '–∑–∞ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ';
      break;
    case POINT_REASONS.VISIT:
      reasonText = '–∑–∞ –ø–æ—Å–µ—â–µ–Ω–∏–µ —É—Ä–æ–∫–∞';
      break;
    case POINT_REASONS.BONUS:
      reasonText = '–±–æ–Ω—É—Å';
      break;
    case POINT_REASONS.PENALTY:
      reasonText = '—à—Ç—Ä–∞—Ñ';
      break;
    case POINT_REASONS.BUY:
      reasonText = '–∑–∞ –ø–æ–∫—É–ø–∫—É';
      break;
    default:
      reasonText = description || '–¥—Ä—É–≥–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è';
  }

  let message = `${emoji} –í—ã ${action} ${Math.abs(changedPoints)} ${pointsText}`;
  
  if (reasonText) {
    message += ` ${reasonText}`;
  }

  if (description && reason !== POINT_REASONS.OTHER) {
    message += `. ${description}`;
  }

  return message;
};

/**
 * –•–µ–ª–ø–µ—Ä –¥–ª—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –ø–æ–∏–Ω—Ç–æ–≤ –∑–∞ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ
 * @param {string} userId - ID —Å—Ç—É–¥–µ–Ω—Ç–∞
 * @param {number} points - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∏–Ω—Ç–æ–≤
 * @param {string} lessonName - –ù–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞
 * @param {string} courseName - –ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞
 */
export const addHomeworkPoints = async (userId, points, lessonName, courseName) => {
  const description = `–£—Ä–æ–∫: ${lessonName}${courseName ? `, –ö—É—Ä—Å: ${courseName}` : ''}`;
  return addPointsHistoryWithNotification(
    userId, 
    POINT_REASONS.HOMEWORK, 
    points, 
    description
  );
};

/**
 * –•–µ–ª–ø–µ—Ä –¥–ª—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –ø–æ–∏–Ω—Ç–æ–≤ –∑–∞ –ø–æ—Å–µ—â–µ–Ω–∏–µ —É—Ä–æ–∫–∞
 * @param {string} userId - ID —Å—Ç—É–¥–µ–Ω—Ç–∞
 * @param {number} points - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∏–Ω—Ç–æ–≤
 * @param {string} lessonName - –ù–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞
 * @param {string} courseName - –ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞
 */
export const addVisitPoints = async (userId, points, lessonName, courseName) => {
  const description = `–£—Ä–æ–∫: ${lessonName}${courseName ? `, –ö—É—Ä—Å: ${courseName}` : ''}`;
  return addPointsHistoryWithNotification(
    userId, 
    POINT_REASONS.VISIT, 
    points, 
    description
  );
};

/**
 * –•–µ–ª–ø–µ—Ä –¥–ª—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –±–æ–Ω—É—Å–Ω—ã—Ö –ø–æ–∏–Ω—Ç–æ–≤
 * @param {string} userId - ID —Å—Ç—É–¥–µ–Ω—Ç–∞
 * @param {number} points - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∏–Ω—Ç–æ–≤
 * @param {string} description - –û–ø–∏—Å–∞–Ω–∏–µ –±–æ–Ω—É—Å–∞
 */
export const addBonusPoints = async (userId, points, description) => {
  return addPointsHistoryWithNotification(
    userId, 
    POINT_REASONS.BONUS, 
    points, 
    description
  );
};

/**
 * –•–µ–ª–ø–µ—Ä –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏—è –ø–æ–∏–Ω—Ç–æ–≤ –∑–∞ –ø–æ–∫—É–ø–∫—É
 * @param {string} userId - ID —Å—Ç—É–¥–µ–Ω—Ç–∞
 * @param {number} points - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∏–Ω—Ç–æ–≤ (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º)
 * @param {string} productName - –ù–∞–∑–≤–∞–Ω–∏–µ –∫—É–ø–ª–µ–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
 */
export const deductPurchasePoints = async (userId, points, productName) => {
  const description = `–ü–æ–∫—É–ø–∫–∞: ${productName}`;
  return addPointsHistoryWithNotification(
    userId, 
    POINT_REASONS.BUY, 
    -Math.abs(points), // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –ø–æ–∏–Ω—Ç—ã –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ
    description
  );
};

/**
 * –•–µ–ª–ø–µ—Ä –¥–ª—è —à—Ç—Ä–∞—Ñ–Ω—ã—Ö –ø–æ–∏–Ω—Ç–æ–≤
 * @param {string} userId - ID —Å—Ç—É–¥–µ–Ω—Ç–∞
 * @param {number} points - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∏–Ω—Ç–æ–≤ (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º)
 * @param {string} description - –û–ø–∏—Å–∞–Ω–∏–µ —à—Ç—Ä–∞—Ñ–∞
 */
export const deductPenaltyPoints = async (userId, points, description) => {
  return addPointsHistoryWithNotification(
    userId, 
    POINT_REASONS.PENALTY, 
    -Math.abs(points), // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –ø–æ–∏–Ω—Ç—ã –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ
    description
  );
};
