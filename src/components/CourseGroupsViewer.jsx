// src/components/CourseGroupsViewer.jsx
import React, { useState, useEffect } from 'react';
import { getGroupsByCourse, autoAddLessonToAllCourseGroups } from '../services/groupScheduleService';
import api from '../api/axiosInstance';
import '../styles/CourseGroupsViewer.css';

const CourseGroupsViewer = ({ courseId, courseName, newLessonId, onAutoAdd }) => {
  const [groups, setGroups] = useState([]);
  const [groupsDetails, setGroupsDetails] = useState([]);
  const [loading, setLoading] = useState(false);
  const [autoAdding, setAutoAdding] = useState(false);
  const [autoAddResults, setAutoAddResults] = useState(null);
  const [isExpanded, setIsExpanded] = useState(false);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –≥—Ä—É–ø–ø—ã –∫—É—Ä—Å–∞ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    if (courseId) {
      loadCourseGroups();
    }
  }, [courseId]);

  const loadCourseGroups = async () => {
    setLoading(true);
    try {
      // –ü–æ–ª—É—á–∞–µ–º ID –≥—Ä—É–ø–ø
      const groupIds = await getGroupsByCourse(courseId);
      setGroups(groupIds);
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–µ—Ç–∞–ª–∏ –≥—Ä—É–ø–ø
      if (groupIds.length > 0) {
        const groupDetails = await Promise.all(
          groupIds.map(async (groupId) => {
            try {
              const response = await api.get(`/groups/${groupId}`);
              return response.data;
            } catch (error) {
              console.error(`Error loading group ${groupId}:`, error);
              return { 
                id: groupId, 
                name: `–ì—Ä—É–ø–ø–∞ ${groupId}`, 
                error: true 
              };
            }
          })
        );
        setGroupsDetails(groupDetails);
      }
    } catch (error) {
      console.error('Error loading course groups:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleAutoAddLesson = async () => {
    if (!newLessonId || groups.length === 0) return;
    
    setAutoAdding(true);
    setAutoAddResults(null);
    
    try {
      const results = await autoAddLessonToAllCourseGroups(courseId, newLessonId);
      setAutoAddResults(results);
      
      // –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
      if (onAutoAdd) {
        onAutoAdd(results);
      }
      
    } catch (error) {
      console.error('Error auto adding lesson:', error);
      setAutoAddResults({
        success: false,
        message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —É—Ä–æ–∫–∞: ' + error.message
      });
    } finally {
      setAutoAdding(false);
    }
  };

  return (
    <div className="course-groups-viewer">
      <div className="viewer-header">
        <div className="course-info">
          <h4>üë• –ì—Ä—É–ø–ø—ã –∫—É—Ä—Å–∞: {courseName}</h4>
          <button 
            className="expand-btn"
            onClick={() => setIsExpanded(!isExpanded)}
            disabled={loading}
          >
            {isExpanded ? '‚ñ≤' : '‚ñº'} {loading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : `–ì—Ä—É–ø–ø: ${groups.length}`}
          </button>
        </div>
        
        {newLessonId && groups.length > 0 && !loading && (
          <button 
            className="btn-auto-add"
            onClick={handleAutoAddLesson}
            disabled={autoAdding}
          >
            {autoAdding ? '‚è≥ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ...' : 'üöÄ –î–æ–±–∞–≤–∏—Ç—å —É—Ä–æ–∫ –≤–æ –≤—Å–µ –≥—Ä—É–ø–ø—ã'}
          </button>
        )}
      </div>

      {isExpanded && (
        <div className="viewer-content">
          {loading ? (
            <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –≥—Ä—É–ø–ø –∫—É—Ä—Å–∞...</div>
          ) : groups.length === 0 ? (
            <div className="no-groups">
              <p>üë• –ö—É—Ä—Å –ø–æ–∫–∞ –Ω–µ –∏–∑—É—á–∞–µ—Ç—Å—è –Ω–∏ –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø–æ–π</p>
              <p className="hint">–î–æ–±–∞–≤—å—Ç–µ —É—Ä–æ–∫–∏ –∫—É—Ä—Å–∞ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø, —á—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å –∏—Ö —Å –∫—É—Ä—Å–æ–º</p>
            </div>
          ) : (
            <div className="groups-list">
              <h5>–ì—Ä—É–ø–ø—ã, –∏–∑—É—á–∞—é—â–∏–µ –∫—É—Ä—Å:</h5>
              {groupsDetails.map(group => (
                <div key={group.id} className={`group-item ${group.error ? 'error' : ''}`}>
                  <div className="group-info">
                    <span className="group-name">{group.name}</span>
                    {group.description && (
                      <span className="group-description">{group.description}</span>
                    )}
                    {group.start_date && group.end_date && (
                      <span className="group-period">
                        {new Date(group.start_date).toLocaleDateString()} - {new Date(group.end_date).toLocaleDateString()}
                      </span>
                    )}
                    {group.teacher && (
                      <span className="group-teacher">
                        –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: {group.teacher.user?.first_name} {group.teacher.user?.surname}
                      </span>
                    )}
                  </div>
                  <div className="group-status">
                    {group.error ? (
                      <span className="status-error">‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</span>
                    ) : (
                      <span className="status-active">‚úÖ –ê–∫—Ç–∏–≤–Ω–∞</span>
                    )}
                  </div>
                </div>
              ))}
              
              {newLessonId && (
                <div className="auto-add-info">
                  <p>üí° –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å —É—Ä–æ–∫ –≤–æ –≤—Å–µ –≥—Ä—É–ø–ø—ã" –Ω–æ–≤—ã–π —É—Ä–æ–∫ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤—Å–µ—Ö {groups.length} –≥—Ä—É–ø–ø —Å–æ–≥–ª–∞—Å–Ω–æ –∏—Ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.</p>
                </div>
              )}
            </div>
          )}

          {autoAddResults && (
            <div className={`auto-add-results ${autoAddResults.success ? 'success' : 'error'}`}>
              <h6>üìã –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:</h6>
              <p>{autoAddResults.message}</p>
              
              {autoAddResults.results && autoAddResults.results.length > 0 && (
                <div className="detailed-results">
                  {autoAddResults.results.map((result, index) => (
                    <div key={index} className={`result-item ${result.success ? 'success' : 'error'}`}>
                      <span className="group-id">–ì—Ä—É–ø–ø–∞ {result.groupId}:</span>
                      <span className="result-status">
                        {result.success ? '‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ' : '‚ùå –û—à–∏–±–∫–∞'}
                      </span>
                      {result.error && (
                        <span className="error-message">{result.error}</span>
                      )}
                    </div>
                  ))}
                </div>
              )}
              
              {autoAddResults.success && autoAddResults.successCount > 0 && (
                <div className="success-summary">
                  ‚úÖ –£—Ä–æ–∫ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ <strong>{autoAddResults.successCount}</strong> –∏–∑ <strong>{autoAddResults.total}</strong> –≥—Ä—É–ø–ø
                </div>
              )}
            </div>
          )}
        </div>
      )}
    </div>
  );
};

export default CourseGroupsViewer;
