// src/pages/StudentCoursePage.jsx
import React, { useState, useEffect } from 'react';
import { useParams, useNavigate }     from 'react-router-dom';
import Sidebar                         from '../components/Sidebar';
import Topbar                          from '../components/TopBar';
import { useAuth }                     from '../contexts/AuthContext';
import { getCourse, listLessons }      from '../services/lessonService';
import { checkStudentCourseAccess }    from '../services/courseService';
import { getUserSchedule }             from '../services/scheduleService';

export default function StudentCoursePage() {
  const { courseId } = useParams();
  const navigate     = useNavigate();
  const { user }     = useAuth();

  const [course,  setCourse]  = useState(null);
  const [lessons, setLessons] = useState([]);
  const [schedule, setSchedule] = useState([]);
  const [loading, setLoading] = useState(true);
  const [hasAccess, setHasAccess] = useState(false);

  useEffect(() => {
    (async () => {
      try {
        setLoading(true);
        
        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –°—Ç—Ä–æ–≥–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ —á–µ—Ä–µ–∑ –æ—Ç–¥–µ–ª—å–Ω—ã–π API
        console.log('[StudentCourse] Checking access to course:', courseId);
        const accessGranted = await checkStudentCourseAccess(courseId);
        
        if (!accessGranted) {
          console.log('[StudentCourse] Access denied to course:', courseId);
          alert('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –∫—É—Ä—Å—É. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –≥—Ä—É–ø–ø—É.');
          navigate('/student-courses');
          return;
        }
        
        setHasAccess(true);
        console.log('[StudentCourse] Access granted to course:', courseId);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—É—Ä—Å–µ
        const c = await getCourse(courseId);
        setCourse(c);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –í–°–ï —É—Ä–æ–∫–∏ –∫—É—Ä—Å–∞ (–ø–æ—Å–∫–æ–ª—å–∫—É –¥–æ—Å—Ç—É–ø –∫ –∫—É—Ä—Å—É —É–∂–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω)
        const l = await listLessons(courseId, 100, 0);
        setLessons(l.objects || []);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞—Ç –∏ —Å—Ç–∞—Ç—É—Å–æ–≤ —É—Ä–æ–∫–æ–≤
        const s = await getUserSchedule(user);
        setSchedule(s || []);
        
        console.log('[StudentCourse] Course loaded:', c);
        console.log('[StudentCourse] Lessons loaded:', l.objects?.length || 0);
        console.log('[StudentCourse] Schedule loaded:', s?.length || 0);
      } catch (error) {
        console.error('Error loading course data:', error);
        alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—É—Ä—Å–∞: ' + (error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
        navigate('/student-courses');
      } finally {
        setLoading(false);
      }
    })();
  }, [courseId, user, navigate]);

  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ —É—Ä–æ–∫–∞
  const getLessonScheduleInfo = (lessonId) => {
    return schedule.find(item => item.lesson_id === lessonId);
  };

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–∫—Ä—ã—Ç –ª–∏ —É—Ä–æ–∫ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è
  const isLessonOpened = (lessonId) => {
    const scheduleItem = getLessonScheduleInfo(lessonId);
    return scheduleItem?.is_opened || false;
  };

  // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å —É—Ä–æ–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const getLessonStatus = (lessonId) => {
    const scheduleItem = getLessonScheduleInfo(lessonId);
    if (!scheduleItem) return 'scheduled'; // —É—Ä–æ–∫ –µ—Å—Ç—å, –Ω–æ –Ω–µ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏
    if (!scheduleItem.is_opened) return 'closed';
    return 'opened';
  };

  const fullName = [user.first_name, user.surname, user.patronymic]
    .filter(Boolean).join(' ');

  if (loading) {
    return (
      <div className="app-layout">
        <Sidebar activeItem="studentCourses" userRole={user.role} />
        <div className="main-content">
          <Topbar 
            userName={fullName} 
            userRole={user.role} 
            onProfileClick={() => navigate('/profile')} 
          />
          <div className="loading-container">
            <div className="loading-spinner"></div>
            <p>–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫—É—Ä—Å—É...</p>
          </div>
        </div>
      </div>
    );
  }

  // –ï—Å–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞, —ç—Ç–æ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–µ –¥–æ–ª–∂–µ–Ω –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è
  // (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω)
  if (!hasAccess) {
    return null;
  }

  return (
    <div className="app-layout">
      <Sidebar activeItem="studentCourses" userRole={user.role} />
      
      <div className="main-content">
        <Topbar 
          userName={fullName} 
          userRole={user.role} 
          onProfileClick={() => navigate('/profile')} 
        />

        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫—É—Ä—Å–∞ */}
        <div className="course-header">
          <div className="course-info">
            <button 
              className="back-button"
              onClick={() => navigate('/student-courses')}
            >
              ‚Üê –ù–∞–∑–∞–¥ –∫ –∫—É—Ä—Å–∞–º
            </button>
            <h1>{course ? course.name : '–ó–∞–≥—Ä—É–∑–∫–∞ –∫—É—Ä—Å–∞...'}</h1>
            {course?.description && (
              <p className="course-description">{course.description}</p>
            )}
          </div>
        </div>
        
        {!course ? (
          <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫—É—Ä—Å–µ...</p>
        ) : lessons.length === 0 ? (
          <div className="empty-state">
            <div className="empty-icon">üìã</div>
            <h3>–í —ç—Ç–æ–º –∫—É—Ä—Å–µ –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–Ω—è—Ç–∏–π</h3>
            <p>–ó–∞–Ω—è—Ç–∏—è –ø–æ—è–≤—è—Ç—Å—è, –∫–æ–≥–¥–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –∏—Ö –¥–æ–±–∞–≤–∏—Ç</p>
          </div>
        ) : (
          <div className="lessons-section">
            <div className="section-header">
              <h2>–í—Å–µ –∑–∞–Ω—è—Ç–∏—è –∫—É—Ä—Å–∞</h2>
              <div className="lessons-stats">
                <span className="stat">
                  –í—Å–µ–≥–æ: {lessons.length}
                </span>
                <span className="stat scheduled">
                  –í —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏: {lessons.filter(l => getLessonScheduleInfo(l.id)).length}
                </span>
                <span className="stat opened">
                  –û—Ç–∫—Ä—ã—Ç–æ: {lessons.filter(l => isLessonOpened(l.id)).length}
                </span>
              </div>
            </div>
            
            <ul className="lessons-list">
              {lessons.map((l, index) => {
                const scheduleItem = getLessonScheduleInfo(l.id);
                const status = getLessonStatus(l.id);
                
                return (
                  <li key={l.id} className={`lesson-item ${status}`}>
                    <div className="lesson-number">
                      {status === 'opened' ? '‚úì' : index + 1}
                    </div>
                    
                    <div className="lesson-info">
                      <h3 className="lesson-title">{l.name}</h3>
                      
                      <div className="lesson-meta">
                        {scheduleItem?.holding_date ? (
                          <div className="lesson-date">
                            <span className="date-label">–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è:</span>
                            <time className="date-value">
                              {new Date(scheduleItem.holding_date).toLocaleString('ru-RU', {
                                day: '2-digit',
                                month: '2-digit', 
                                year: 'numeric',
                                hour: '2-digit',
                                minute: '2-digit'
                              })}
                            </time>
                          </div>
                        ) : (
                          <div className="lesson-date">
                            <span className="date-label">–°—Ç–∞—Ç—É—Å:</span>
                            <span className="date-value no-date">–Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ</span>
                          </div>
                        )}
                      </div>
                    </div>
                    
                    <div className="lesson-actions">
                      {status === 'scheduled' ? (
                        <div className="lesson-status-badge scheduled">
                          <span className="status-icon">üìÖ</span>
                          <span>–ù–µ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏</span>
                        </div>
                      ) : status === 'closed' ? (
                        <div className="lesson-status-badge closed">
                          <span className="status-icon">‚è∞</span>
                          <span>–ó–∞–∫—Ä—ã—Ç–æ</span>
                        </div>
                      ) : (
                        <button
                          className="lesson-button opened"
                          onClick={() => navigate(`/courses/${courseId}/lessons/${l.id}`)}
                        >
                          <span className="button-icon">‚ñ∂</span>
                          –û—Ç–∫—Ä—ã—Ç—å —É—Ä–æ–∫
                        </button>
                      )}
                    </div>
                  </li>
                );
              })}
            </ul>
          </div>
        )}

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –±–ª–æ–∫ */}
        <div className="info-section">
          <div className="info-card">
            <h3>–ö–∞–∫ –ø—Ä–æ—Ö–æ–¥—è—Ç –∑–∞–Ω—è—Ç–∏—è?</h3>
            <ul>
              <li><strong>–î–æ—Å—Ç—É–ø –∫ –∫—É—Ä—Å—É</strong> - —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –≥—Ä—É–ø–ø—ã, –∫ –∫–æ—Ç–æ—Ä—ã–º –≤—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã</li>
              <li><strong>–í—Å–µ —É—Ä–æ–∫–∏ –≤–∏–¥–Ω—ã —Å—Ä–∞–∑—É</strong> - –≤—ã –º–æ–∂–µ—Ç–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ</li>
              <li><strong>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ</strong> - –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–∞–∑–Ω–∞—á–∞–µ—Ç –¥–∞—Ç—ã –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è</li>
              <li><strong>–î–æ—Å—Ç—É–ø –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º</strong> - –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –Ω–∞—á–∞–ª–∞ —É—Ä–æ–∫–∞</li>
              <li><strong>–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–π</strong> - –¥–æ—Å—Ç—É–ø–Ω–æ –≤ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è</li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  );
}
