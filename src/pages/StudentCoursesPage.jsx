import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';

import Sidebar   from '../components/Sidebar';
import SmartTopBar from '../components/SmartTopBar';
import { useAuth } from '../contexts/AuthContext';

import { listStudentCourses, getAllCourses } from '../services/courseService';
import '../styles/CourseCard.css';

export default function StudentCoursesPage() {
  const navigate      = useNavigate();
  const { user }      = useAuth();

  const [myCourses,      setMyCourses]      = useState([]);
  const [otherCourses,   setOtherCourses]   = useState([]);
  const [loading,        setLoading]        = useState(true);
  const [error,          setError]          = useState(null);

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –∑–∞–≥—Ä—É–∑–∫–∞ –∫—É—Ä—Å–æ–≤ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  useEffect(() => { (async () => {
    try {
      setLoading(true);
      
      // 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫—É—Ä—Å—ã —Å—Ç—É–¥–µ–Ω—Ç–∞
      const availableCourses = await listStudentCourses();
      const availableIds = new Set(availableCourses.map(c => c.id));
      setMyCourses(availableCourses || []);
      
      // 2. –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –∫—É—Ä—Å—ã –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ
      const allCoursesResponse = await getAllCourses(100, 0);
      const allCourses = allCoursesResponse.objects || [];
      const unavailableCourses = allCourses.filter(c => !availableIds.has(c.id));
      setOtherCourses(unavailableCourses);
      
      console.log('[StudentCoursesPage] Available courses:', availableCourses);
      console.log('[StudentCoursesPage] Other courses:', unavailableCourses);
    } catch (err) {
      console.error('[StudentCoursesPage] Error loading courses:', err);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫—É—Ä—Å—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    } finally {
      setLoading(false);
    }
  })(); }, []);

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ helpers ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  const openCourse = id => {
    navigate(`/courses/${id}/student`);
  };

  const openDisabled = () => {
    alert('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –∫—É—Ä—Å—É. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É.');
  };

  const fullName = [user.first_name, user.surname, user.patronymic]
                    .filter(Boolean).join(' ');

  const renderCourseCard = (course, disabled = false) => {
    let imageUrl = '';
    if (course.photo?.url) {
      imageUrl = course.photo.url.startsWith('http')
        ? course.photo.url
        : `${window.location.protocol}//${window.location.hostname}:8080${course.photo.url}`;
    }

    return (
      <div 
        key={course.id} 
        className={`course-card ${disabled ? 'disabled' : ''}`}
        onClick={disabled ? openDisabled : () => openCourse(course.id)}
        style={disabled ? { opacity: 0.6, cursor: 'not-allowed' } : {}}
      >
        {imageUrl ? (
          <img src={imageUrl} alt={course.name} />
        ) : (
          <div className="course-placeholder">
            <span>üìö</span>
          </div>
        )}
        <div className="meta">
          <h3>{course.name}</h3>
          <p>{course.description?.substring(0, 60)}...</p>
          <div className="course-info-footer">
            {course.author_name && <span className="author">üë©‚Äçüè´ {course.author_name}</span>}
            {course.age_category && <span className="age">üë• {course.age_category}</span>}
            {disabled && <span className="status" style={{color: '#dc3545'}}>üîí –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ</span>}
          </div>
        </div>
      </div>
    );
  };

  if (loading) {
    return (
      <div className="courses-page app-layout">
        <Sidebar activeItem="studentCourses" userRole={user.role} />
        <div className="main-content">
          <SmartTopBar pageTitle="–ú–æ–∏ –∫—É—Ä—Å—ã" />
          <div className="loading-container">
            <div className="loader"></div>
            <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∫—É—Ä—Å–æ–≤...</p>
          </div>
        </div>
      </div>
    );
  }

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ UI ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  return (
    <div className="courses-page app-layout">
      <Sidebar activeItem="studentCourses" userRole={user.role} />

      <div className="main-content">
        <SmartTopBar pageTitle="–ú–æ–∏ –∫—É—Ä—Å—ã" />

        {error && (
          <div className="error-message">
            {error}
          </div>
        )}

        {/* –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫—É—Ä—Å—ã */}
        <section className="courses-section">
          <div className="section-header">
            <h2 className="section-label">–ú–æ–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫—É—Ä—Å—ã</h2>
            <span className="course-count">{myCourses.length} –∫—É—Ä—Å(–æ–≤)</span>
          </div>
          {myCourses.length ? (
            <div className="courses-grid">
              {myCourses.map(course => renderCourseCard(course, false))}
            </div>
          ) : (
            <div className="empty-state">
              <div className="empty-icon">üìö</div>
              <h3>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫—É—Ä—Å–æ–≤</h3>
              <p>–ö—É—Ä—Å—ã –ø–æ—è–≤—è—Ç—Å—è –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–∞—Å –≤ –≥—Ä—É–ø–ø—É —Å –∫—É—Ä—Å–∞–º–∏</p>
            </div>
          )}
        </section>

        {/* –ù–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫—É—Ä—Å—ã */}
        <section className="courses-section" style={{ marginTop: '2rem' }}>
          <div className="section-header">
            <h2 className="section-label">–î—Ä—É–≥–∏–µ –∫—É—Ä—Å—ã</h2>
            <span className="course-count">{otherCourses.length} –∫—É—Ä—Å(–æ–≤)</span>
          </div>
          {otherCourses.length ? (
            <div className="courses-grid">
              {otherCourses.map(course => renderCourseCard(course, true))}
            </div>
          ) : (
            <div className="empty-state">
              <div className="empty-icon">üéØ</div>
              <h3>–í—ã –∏–º–µ–µ—Ç–µ –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –∫—É—Ä—Å–∞–º!</h3>
              <p>–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫—É—Ä—Å—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã –≤ —Ä–∞–∑–¥–µ–ª–µ –≤—ã—à–µ</p>
            </div>
          )}
        </section>

        <section className="info-section">
          <div className="info-card">
            <h3>–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫—É—Ä—Å–∞–º?</h3>
            <ol>
              <li>–ö—É—Ä—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –≥—Ä—É–ø–ø—ã</li>
              <li>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –¥–æ–±–∞–≤–∏—Ç—å –≤–∞—Å –≤ –≥—Ä—É–ø–ø—É</li>
              <li>–ö –≥—Ä—É–ø–ø–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–∏–≤—è–∑–∞–Ω –∫—É—Ä—Å</li>
              <li>–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –∫—É—Ä—Å –ø–æ—è–≤–∏—Ç—Å—è –≤ —Ä–∞–∑–¥–µ–ª–µ "–ú–æ–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫—É—Ä—Å—ã"</li>
            </ol>
            <p>
              <strong>–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:</strong> {myCourses.length > 0 
                ? `–£ –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ ${myCourses.length} –∏–∑ ${myCourses.length + otherCourses.length} –∫—É—Ä—Å(–∞–º)` 
                : `–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫—É—Ä—Å–æ–≤ –∏–∑ ${otherCourses.length} –≤—Å–µ–≥–æ`}
            </p>
          </div>
        </section>
      </div>
    </div>
  );
}
