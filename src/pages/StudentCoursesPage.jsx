import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';

import Sidebar   from '../components/Sidebar';
import SmartTopBar from '../components/SmartTopBar';
import CourseProgressBar from '../components/CourseProgressBar';
import { useAuth } from '../contexts/AuthContext';

import { listStudentCourses, getAllCoursesFiltered, getStudentLessonProgress } from '../services/courseService';
import '../styles/CourseCard.css';

export default function StudentCoursesPage() {
  const navigate      = useNavigate();
  const { user }      = useAuth();

  const [myCourses,      setMyCourses]      = useState([]);
  const [otherCourses,   setOtherCourses]   = useState([]);
  const [lessonProgress, setLessonProgress] = useState([]);
  const [loading,        setLoading]        = useState(true);
  const [error,          setError]          = useState(null);

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –∑–∞–≥—Ä—É–∑–∫–∞ –∫—É—Ä—Å–æ–≤ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  useEffect(() => { (async () => {
    try {
      setLoading(true);
      
      // 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫—É—Ä—Å—ã —Å—Ç—É–¥–µ–Ω—Ç–∞ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
      const availableCourses = await listStudentCourses();
      const availableIds = new Set(availableCourses.map(c => c.id));
      setMyCourses(availableCourses || []);
      
      // 2. –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ —É—Ä–æ–∫–∞–º
      const lessonProgressData = await getStudentLessonProgress();
      setLessonProgress(lessonProgressData || []);
      
      // 3. –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –∫—É—Ä—Å—ã —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É —Å—Ç—É–¥–µ–Ω—Ç–∞
      const allCoursesResponse = await getAllCoursesFiltered(user, 100, 0);
      const allCourses = allCoursesResponse.objects || [];
      const unavailableCourses = allCourses.filter(c => !availableIds.has(c.id));
      setOtherCourses(unavailableCourses);
      
      console.log('[StudentCoursesPage] Available courses:', availableCourses);
      console.log('[StudentCoursesPage] Lesson progress:', lessonProgressData);
      console.log('[StudentCoursesPage] Age-filtered other courses:', unavailableCourses);
    } catch (err) {
      console.error('[StudentCoursesPage] Error loading courses:', err);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫—É—Ä—Å—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    } finally {
      setLoading(false);
    }
  })(); }, [user]);

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ helpers ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  const openCourse = id => {
    navigate(`/courses/${id}/student`);
  };

  const openDisabled = () => {
    alert('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –∫—É—Ä—Å—É. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É.');
  };

  const fullName = [user.first_name, user.surname, user.patronymic]
                    .filter(Boolean).join(' ');

  const renderCourseCard = (course, disabled = false) => {
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º age_category –∫–∞–∫ –º–∞—Å—Å–∏–≤ –∏–ª–∏ —Å—Ç—Ä–æ–∫—É
    const ageCategory = Array.isArray(course.age_category) 
      ? course.age_category.join(', ') 
      : course.age_category;

    let imageUrl = '';
    if (course.photo?.url) {
      imageUrl = course.photo.url.startsWith('http')
        ? course.photo.url
        : `${window.location.protocol}//${window.location.hostname}:8080${course.photo.url}`;
    }

    // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ —É—Ä–æ–∫–∞–º –¥–ª—è —ç—Ç–æ–≥–æ –∫—É—Ä—Å–∞
    const courseProgress = course.progress || 0;
    const courseLessons = lessonProgress.filter(lesson => {
      // –ù–∞—Ö–æ–¥–∏–º —É—Ä–æ–∫–∏ —ç—Ç–æ–≥–æ –∫—É—Ä—Å–∞ —á–µ—Ä–µ–∑ lesson_group
      return lesson.lesson_group && lesson.lesson_group.lesson && 
             lesson.lesson_group.lesson.course_id === course.id;
    });

    return (
      <div 
        key={course.id} 
        className={`course-card ${disabled ? 'disabled' : ''}`}
        onClick={disabled ? openDisabled : () => openCourse(course.id)}
        style={disabled ? { opacity: 0.6, cursor: 'not-allowed' } : {}}
      >
        {imageUrl ? (
          <img src={imageUrl} alt={course.name} />
        ) : (
          <div className="course-placeholder">
            <span>üìö</span>
          </div>
        )}
        <div className="meta">
          <h3>{course.name}</h3>
          <p>{course.description?.substring(0, 60)}...</p>
          
          {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å —Ç–æ–ª—å–∫–æ –¥–ª—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫—É—Ä—Å–æ–≤ */}
          {!disabled && (
            <CourseProgressBar 
              progress={courseProgress}
              lessonProgress={courseLessons}
              showDetails={courseLessons.length > 0}
              compact={true}
            />
          )}
          
          <div className="course-info-footer">
            {course.author_name && <span className="author">üë©‚Äçüè´ {course.author_name}</span>}
            {ageCategory && <span className="age">üë• {ageCategory}</span>}
            {disabled && <span className="status" style={{color: '#dc3545'}}>üîí –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ</span>}
          </div>
        </div>
      </div>
    );
  };

  if (loading) {
    return (
      <div className="courses-page app-layout">
        <Sidebar activeItem="studentCourses" userRole={user.role} />
        <div className="main-content">
          <SmartTopBar pageTitle="–ú–æ–∏ –∫—É—Ä—Å—ã" />
          <div className="loading-container">
            <div className="loader"></div>
            <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∫—É—Ä—Å–æ–≤...</p>
          </div>
        </div>
      </div>
    );
  }

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ UI ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  return (
    <div className="courses-page app-layout">
      <Sidebar activeItem="studentCourses" userRole={user.role} />

      <div className="main-content">
        <SmartTopBar pageTitle="–ú–æ–∏ –∫—É—Ä—Å—ã" />

        {error && (
          <div className="error-message">
            {error}
          </div>
        )}

        {/* –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫—É—Ä—Å—ã */}
        <section className="courses-section">
          <div className="section-header">
            <h2 className="section-label">–ú–æ–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫—É—Ä—Å—ã</h2>
            <span className="course-count">{myCourses.length} –∫—É—Ä—Å(–æ–≤)</span>
          </div>
          {myCourses.length ? (
            <div className="courses-grid">
              {myCourses.map(course => renderCourseCard(course, false))}
            </div>
          ) : (
            <div className="empty-state">
              <div className="empty-icon">üìö</div>
              <h3>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫—É—Ä—Å–æ–≤</h3>
              <p>–ö—É—Ä—Å—ã –ø–æ—è–≤—è—Ç—Å—è –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–∞—Å –≤ –≥—Ä—É–ø–ø—É —Å –∫—É—Ä—Å–∞–º–∏</p>
            </div>
          )}
        </section>

        {/* –ù–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫—É—Ä—Å—ã */}
        <section className="courses-section" style={{ marginTop: '2rem' }}>
          <div className="section-header">
            <h2 className="section-label">–î—Ä—É–≥–∏–µ –∫—É—Ä—Å—ã</h2>
            <span className="course-count">{otherCourses.length} –∫—É—Ä—Å(–æ–≤)</span>
          </div>
          
          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ */}
          {user.birth_date && (
            <div className="age-filter-info" style={{
              background: 'linear-gradient(135deg, #e3f2fd 0%, #f0f9ff 100%)',
              border: '1px solid #2196f3',
              borderRadius: '8px',
              padding: '12px 16px',
              marginBottom: '16px',
              fontSize: '14px',
              color: '#1565c0'
            }}>
              <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                <span>üéÇ</span>
                <span>
                  –ö—É—Ä—Å—ã –ø–æ–¥–æ–±—Ä–∞–Ω—ã —Å —É—á–µ—Ç–æ–º –≤–∞—à–µ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ ({(() => {
                    const today = new Date();
                    const birth = new Date(user.birth_date);
                    let age = today.getFullYear() - birth.getFullYear();
                    const monthDiff = today.getMonth() - birth.getMonth();
                    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {
                      age--;
                    }
                    return age;
                  })()} –ª–µ—Ç)
                </span>
              </div>
            </div>
          )}
          {otherCourses.length ? (
            <div className="courses-grid">
              {otherCourses.map(course => renderCourseCard(course, true))}
            </div>
          ) : (
            <div className="empty-state">
              <div className="empty-icon">üéØ</div>
              <h3>–í—ã –∏–º–µ–µ—Ç–µ –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –∫—É—Ä—Å–∞–º!</h3>
              <p>–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫—É—Ä—Å—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã –≤ —Ä–∞–∑–¥–µ–ª–µ –≤—ã—à–µ</p>
            </div>
          )}
        </section>

        <section className="info-section">
          <div className="info-card">
            <h3>üìö –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–∏—Å—Ç–µ–º–∞ –∫—É—Ä—Å–æ–≤?</h3>
            <div style={{ marginBottom: '16px' }}>
              <h4>üîê –î–æ—Å—Ç—É–ø –∫ –∫—É—Ä—Å–∞–º:</h4>
              <ol>
                <li>–ö—É—Ä—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –≥—Ä—É–ø–ø—ã</li>
                <li>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –¥–æ–±–∞–≤–∏—Ç—å –≤–∞—Å –≤ –≥—Ä—É–ø–ø—É</li>
                <li>–ö –≥—Ä—É–ø–ø–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–∏–≤—è–∑–∞–Ω –∫—É—Ä—Å</li>
                <li>–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –∫—É—Ä—Å –ø–æ—è–≤–∏—Ç—Å—è –≤ —Ä–∞–∑–¥–µ–ª–µ "–ú–æ–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫—É—Ä—Å—ã"</li>
              </ol>
            </div>
            
            <div style={{ marginBottom: '16px' }}>
              <h4>üéÇ –í–æ–∑—Ä–∞—Å—Ç–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è:</h4>
              <ul>
                <li>–ö—É—Ä—Å—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ñ–∏–ª—å—Ç—Ä—É—é—Ç—Å—è –ø–æ –≤–∞—à–µ–º—É –≤–æ–∑—Ä–∞—Å—Ç—É</li>
                <li>–ü–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–∞–º –∫—É—Ä—Å—ã</li>
                <li>–≠—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–π—Ç–∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –Ω—É–∂–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏</li>
              </ul>
            </div>
            
            <p>
              <strong>–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:</strong> {myCourses.length > 0 
                ? `–£ –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ ${myCourses.length} –∏–∑ ${myCourses.length + otherCourses.length} –∫—É—Ä—Å(–æ–≤)` 
                : `–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫—É—Ä—Å–æ–≤ –∏–∑ ${otherCourses.length} –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∫—É—Ä—Å–æ–≤`}
            </p>
          </div>
        </section>
      </div>
    </div>
  );
}
