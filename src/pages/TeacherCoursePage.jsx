import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import Sidebar from '../components/Sidebar';
import Topbar from '../components/TopBar';
import { useAuth } from '../contexts/AuthContext';
import { getCourse } from '../services/courseService';
import { getCourseLessons } from '../services/lessonService';
import '../styles/CourseDetailPage.css';
import '../styles/TeacherCoursePage.css'; // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Å—Ç–∏–ª–∏

export default function TeacherCoursePage() {
  const { courseId } = useParams();
  const navigate = useNavigate();
  const { user } = useAuth();

  const [course, setCourse] = useState(null);
  const [lessons, setLessons] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null); // –î–û–ë–ê–í–õ–ï–ù–û: —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—à–∏–±–æ–∫

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –∑–∞–≥—Ä—É–∑–∫–∞ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  useEffect(() => {
    (async () => {
      try {
        setLoading(true);
        const courseData = await getCourse(courseId);
        setCourse(courseData);
        
        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –∏—Å–ø–æ–ª—å–∑—É–µ–º getCourseLessons –≤–º–µ—Å—Ç–æ listLessons
        const lessonsData = await getCourseLessons(courseId);
        setLessons(lessonsData);
      } catch (error) {
        console.error('Error loading course data:', error);
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∫—É—Ä—Å–∞');
      } finally {
        setLoading(false);
      }
    })();
  }, [courseId]);

  const fio = [user.first_name, user.surname, user.patronymic].filter(Boolean).join(' ');

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  const formatDate = (dateString) => {
    if (!dateString) return '–î–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞';
    const date = new Date(dateString);
    return date.toLocaleDateString() + ' –≤ ' + date.toLocaleTimeString().slice(0, 5);
  };

  const getStatusBadge = (lesson) => {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —É—Ä–æ–∫–∞
    // –ù–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞—Ç—ã –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    const today = new Date();
    const lessonDate = lesson.holding_date ? new Date(lesson.holding_date) : null;
    
    if (!lessonDate) return { text: '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω', class: 'not-scheduled' };
    if (lessonDate > today) return { text: '–ü—Ä–µ–¥—Å—Ç–æ–∏—Ç', class: 'upcoming' };
    return { text: '–ü—Ä–æ–≤–µ–¥–µ–Ω', class: 'completed' };
  };

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –°–æ–∑–¥–∞–Ω–∏–µ —É—Ä–æ–∫–∞ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  const handleCreateLesson = () => {
    navigate(`/courses/${courseId}/lessons/create`);
  };

  // –î–û–ë–ê–í–õ–ï–ù–û: –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤ render
  if (error) {
    return (
      <div className="app-layout">
        <Sidebar activeItem="teacherCourses" userRole={user.role} />
        <div className="main-content">
          <Topbar userName={fio} userRole={user.role} onProfileClick={() => navigate('/profile')} />
          <div className="error-container">
            <h2>–û—à–∏–±–∫–∞</h2>
            <p>{error}</p>
            <button onClick={() => window.location.reload()}>–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å</button>
          </div>
        </div>
      </div>
    );
  }

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ UI ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  return (
    <div className="app-layout">
      <Sidebar activeItem="teacherCourses" userRole={user.role} />

      <div className="main-content">
        <Topbar
          userName={fio}
          userRole={user.role}
          onProfileClick={() => navigate('/profile')}
        />

        {loading ? (
          <div className="loading-container">
            <div className="loader"></div>
            <p>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫—É—Ä—Å–∞...</p>
          </div>
        ) : (
          <>
            <div className="teacher-course-header">
              <div className="course-title-section">
                <h1>{course ? course.name : '–ö—É—Ä—Å'}</h1>
                {course?.description && (
                  <p className="course-description">{course.description}</p>
                )}
              </div>
              
              <div className="course-actions">
                <button
                  className="btn-primary"
                  onClick={handleCreateLesson}
                >
                  <span className="btn-icon">+</span> –î–æ–±–∞–≤–∏—Ç—å —É—Ä–æ–∫
                </button>
                <button
                  className="btn-secondary"
                  onClick={() => navigate(`/courses/${courseId}`)}
                >
                  <span className="btn-icon">‚öôÔ∏è</span> –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–æ–º
                </button>
              </div>
            </div>

            <div className="teacher-lessons-container">
              <div className="section-header">
                <h2 className="section-title">–£—Ä–æ–∫–∏ –∫—É—Ä—Å–∞</h2>
                <span className="lessons-count">{lessons.length} —É—Ä–æ–∫(–æ–≤)</span>
              </div>

              {lessons.length === 0 ? (
                <div className="empty-lessons">
                  <div className="empty-icon">üìö</div>
                  <h3>–í —ç—Ç–æ–º –∫—É—Ä—Å–µ –ø–æ–∫–∞ –Ω–µ—Ç —É—Ä–æ–∫–æ–≤</h3>
                  <p>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å —É—Ä–æ–∫", —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—ã–π —É—Ä–æ–∫ –¥–ª—è –∫—É—Ä—Å–∞</p>
                  <button
                    className="btn-primary create-lesson-btn"
                    onClick={handleCreateLesson}
                  >
                    –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—ã–π —É—Ä–æ–∫
                  </button>
                </div>
              ) : (
                <div className="lessons-grid">
                  {lessons.map(lesson => {
                    const status = getStatusBadge(lesson);
                    
                    return (
                      <div
                        key={lesson.id}
                        className="teacher-lesson-card"
                        onClick={() => navigate(`/courses/${courseId}/teacher/lessons/${lesson.id}`)}
                      >
                        <div className="lesson-card-header">
                          <span className={`status-badge ${status.class}`}>
                            {status.text}
                          </span>
                          <span className="lesson-number">–£—Ä–æ–∫ {lessons.indexOf(lesson) + 1}</span>
                        </div>
                        
                        <div className="lesson-card-body">
                          <h3 className="lesson-title">{lesson.name}</h3>
                          {lesson.description && (
                            <p className="lesson-desc">{lesson.description.length > 100 
                              ? `${lesson.description.substring(0, 100)}...` 
                              : lesson.description}
                            </p>
                          )}
                        </div>
                        
                        <div className="lesson-card-footer">
                          <div className="lesson-meta">
                            {lesson.holding_date && (
                              <span className="lesson-date">
                                <i className="date-icon">üìÖ</i> {formatDate(lesson.holding_date)}
                              </span>
                            )}
                            
                            <div className="lesson-stats">
                              <span className="materials-count" title="–ú–∞—Ç–µ—Ä–∏–∞–ª—ã">
                                <i className="materials-icon">üìÑ</i> {lesson.materials_count || 0}
                              </span>
                              
                              <span className="homework-count" title="–î–æ–º–∞—à–Ω–∏–µ —Ä–∞–±–æ—Ç—ã">
                                <i className="homework-icon">üìù</i> {lesson.homework_count || 0}
                              </span>
                            </div>
                          </div>
                          
                          <div className="lesson-actions">
                            <button 
                              className="lesson-action-btn view-btn"
                              onClick={(e) => {
                                e.stopPropagation();
                                navigate(`/courses/${courseId}/teacher/lessons/${lesson.id}`);
                              }}
                            >
                              –ü—Ä–æ—Å–º–æ—Ç—Ä
                            </button>
                            <button
                              className="lesson-action-btn edit-btn"
                              onClick={(e) => {
                                e.stopPropagation();
                                navigate(`/courses/${courseId}/lessons/${lesson.id}/edit`);
                              }}
                            >
                              –ò–∑–º–µ–Ω–∏—Ç—å
                            </button>
                          </div>
                        </div>
                      </div>
                    );
                  })}
                </div>
              )}
            </div>
          </>
        )}
      </div>
    </div>
  );
}
