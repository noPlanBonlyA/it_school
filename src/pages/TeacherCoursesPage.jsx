import React, { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';

import Sidebar from '../components/Sidebar';
import Topbar  from '../components/TopBar';
import { useAuth } from '../contexts/AuthContext';

import { getTeacherCourses } from '../services/courseService';
import '../styles/CoursesPage.css';

/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ ¬´–ú–æ–∏ –∫—É—Ä—Å—ã¬ª –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∫—É—Ä—Å—ã, –∫ –∫–æ—Ç–æ—Ä—ã–º –ø—Ä–∏–≤—è–∑–∞–Ω –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å
 */
export default function TeacherCoursesPage() {
  const { user }  = useAuth();
  const navigate  = useNavigate();

  const [myCourses, setMyCourses] = useState([]);
  const [loading,   setLoading]   = useState(true);
  const [error,     setError]     = useState(null);

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –∑–∞–≥—Ä—É–∑–∫–∞ –∫—É—Ä—Å–æ–≤ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  useEffect(() => { (async () => {
    try {
      setLoading(true);
      // –ö—É—Ä—Å—ã, –∫ –∫–æ—Ç–æ—Ä—ã–º –ø—Ä–∏–≤—è–∑–∞–Ω –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å
      const mine = await getTeacherCourses();  // GET /api/courses/teacher
      setMyCourses(mine || []);
      console.log('[TeacherCoursesPage] Loaded courses:', mine);
    } catch (e) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—É—Ä—Å–æ–≤ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:', e);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∞—à–∏ –∫—É—Ä—Å—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    } finally {
      setLoading(false);
    }
  })(); }, []);

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –ø–µ—Ä–µ—Ö–æ–¥—ã ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  const openCourse = id => navigate(`/courses/${id}/teacher`);

  /* –§–ò–û –≤ —à–∞–ø–∫–µ */
  const fullName = [user.first_name, user.surname, user.patronymic]
                    .filter(Boolean).join(' ');

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ UI –∫–∞—Ä—Ç–æ—á–∫–∞ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  const Card = ({ course }) => {
    const img = course.photo?.url
      ? (course.photo.url.startsWith('http')
          ? course.photo.url
          : `${window.location.protocol}//${window.location.hostname}:8080${course.photo.url}`)
      : '';

    return (
      <div className="course-card" key={course.id} onClick={() => openCourse(course.id)}>
        <div className="course-image-wrapper">
          {img ? <img src={img} alt={course.name} className="course-image" />
               : <div className="course-image placeholder">
                   <span>üìö</span>
                 </div>}
        </div>
        <div className="course-body">
          <h2 className="course-title">{course.name}</h2>
          <p className="course-description">{course.description?.substring(0, 100)}...</p>
          <button className="course-button" onClick={(e) => {e.stopPropagation(); openCourse(course.id);}}>
            –û—Ç–∫—Ä—ã—Ç—å –∫—É—Ä—Å
          </button>
        </div>
      </div>
    );
  };

  if (loading) {
    return (
      <div className="courses-page app-layout">
        <Sidebar activeItem="teacherCourses" userRole={user.role} />
        <div className="main-content">
          <Topbar
            userName={fullName}
            userRole={user.role}
            onProfileClick={() => navigate('/profile')}
          />
          <div className="loading-container">
            <div className="loader"></div>
            <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∫—É—Ä—Å–æ–≤...</p>
          </div>
        </div>
      </div>
    );
  }

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ —Ä–µ–Ω–¥–µ—Ä ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  return (
    <div className="courses-page app-layout">
      <Sidebar activeItem="teacherCourses" userRole={user.role} />

      <div className="main-content">
        <Topbar
          userName={fullName}
          userRole={user.role}
          onBellClick={() => {}}
          onProfileClick={() => navigate('/profile')}
        />

        <h1>–ú–æ–∏ –∫—É—Ä—Å—ã</h1>

        {error && (
          <div className="error-message">
            {error}
          </div>
        )}

        <section className="courses-section">
          <div className="section-header">
            <h2 className="section-label">–ö—É—Ä—Å—ã –ø–æ–¥ –≤–∞—à–∏–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º</h2>
            <span className="course-count">{myCourses.length} –∫—É—Ä—Å(–æ–≤)</span>
          </div>
          
          {myCourses.length ? (
            <div className="courses-grid">
              {myCourses.map(c => <Card course={c} key={c.id} />)}
            </div>
          ) : (
            <div className="empty-state">
              <div className="empty-icon">üë©‚Äçüè´</div>
              <h3>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –∫—É—Ä—Å–æ–≤</h3>
              <p>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –Ω–∞–∑–Ω–∞—á–∏—Ç—å –≤–∞—Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º –∫—É—Ä—Å–∞ –∏–ª–∏ –≥—Ä—É–ø–ø—ã —Å –∫—É—Ä—Å–∞–º–∏</p>
            </div>
          )}
        </section>

        <section className="info-section">
          <div className="info-card">
            <h3>–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫—É—Ä—Å–∞–º?</h3>
            <ol>
              <li>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–∞–∑–Ω–∞—á–∞–µ—Ç –≤–∞—Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º –≥—Ä—É–ø–ø—ã</li>
              <li>–ö –≥—Ä—É–ø–ø–µ –ø—Ä–∏–≤—è–∑—ã–≤–∞—é—Ç—Å—è –∫—É—Ä—Å—ã</li>
              <li>–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —ç—Ç–∏–º–∏ –∫—É—Ä—Å–∞–º–∏</li>
              <li>–ú–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å —Å—Ç—É–¥–µ–Ω—Ç–æ–≤</li>
            </ol>
            <p>
              <strong>–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:</strong> {myCourses.length > 0 
                ? `–í—ã –≤–µ–¥–µ—Ç–µ ${myCourses.length} –∫—É—Ä—Å(–æ–≤)` 
                : '–ö—É—Ä—Å—ã –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã'}
            </p>
          </div>
        </section>
      </div>
    </div>
  );
}
