import React, { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';

import Sidebar from '../components/Sidebar';
import SmartTopBar from '../components/SmartTopBar';
import CourseImage from '../components/CourseImage';
import { useAuth } from '../contexts/AuthContext';

import { getTeacherCourses } from '../services/courseService';
import '../styles/CourseCard.css';
import '../styles/CourseImageStyles.css';
import '../styles/MobileImageFixes.css';

/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ ¬´–ú–æ–∏ –∫—É—Ä—Å—ã¬ª –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∫—É—Ä—Å—ã, –∫ –∫–æ—Ç–æ—Ä—ã–º –ø—Ä–∏–≤—è–∑–∞–Ω –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å
 */
export default function TeacherCoursesPage() {
  const { user }  = useAuth();
  const navigate  = useNavigate();

  const [myCourses, setMyCourses] = useState([]);
  const [loading,   setLoading]   = useState(true);
  const [error,     setError]     = useState(null);

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –∑–∞–≥—Ä—É–∑–∫–∞ –∫—É—Ä—Å–æ–≤ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  useEffect(() => { (async () => {
    try {
      setLoading(true);
      // –ö—É—Ä—Å—ã, –∫ –∫–æ—Ç–æ—Ä—ã–º –ø—Ä–∏–≤—è–∑–∞–Ω –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å
      const mine = await getTeacherCourses();  // GET /api/courses/teacher
      setMyCourses(mine || []);
      console.log('[TeacherCoursesPage] Loaded courses:', mine);
    } catch (e) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—É—Ä—Å–æ–≤ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:', e);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∞—à–∏ –∫—É—Ä—Å—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    } finally {
      setLoading(false);
    }
  })(); }, []);

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –ø–µ—Ä–µ—Ö–æ–¥—ã ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  const openCourse = id => navigate(`/courses/${id}/teacher`);

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ UI –∫–∞—Ä—Ç–æ—á–∫–∞ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  const renderCourseCard = (course) => {
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º age_category –∫–∞–∫ –º–∞—Å—Å–∏–≤ –∏–ª–∏ —Å—Ç—Ä–æ–∫—É
    const ageCategory = Array.isArray(course.age_category) 
      ? course.age_category.join(', ') 
      : course.age_category;

    return (
      <div 
        key={course.id} 
        className="course-card"
        onClick={() => openCourse(course.id)}
      >
        <CourseImage
          src={course.photo?.url}
          alt={course.name}
          className="course-card-image"
          placeholder="üìö"
        />
        <div className="meta">
          <h3>{course.name}</h3>
          <p>{course.description?.substring(0, 60)}...</p>
          
          <div className="course-info-footer">
            {course.author_name && <span className="author">üë©‚Äçüè´ {course.author_name}</span>}
            {ageCategory && <span className="age">üë• {ageCategory}</span>}
            <span className="status">üéì –ü—Ä–µ–ø–æ–¥–∞—é</span>
          </div>
        </div>
      </div>
    );
  };

  if (loading) {
    return (
      <div className="courses-page app-layout">
        <Sidebar activeItem="teacherCourses" userRole={user.role} />
        <div className="main-content">
          <SmartTopBar pageTitle="–ú–æ–∏ –∫—É—Ä—Å—ã" />
          <div className="loading-container">
            <div className="loader"></div>
            <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∫—É—Ä—Å–æ–≤...</p>
          </div>
        </div>
      </div>
    );
  }

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ —Ä–µ–Ω–¥–µ—Ä ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  return (
    <div className="courses-page app-layout">
      <Sidebar activeItem="teacherCourses" userRole={user.role} />

      <div className="main-content">
        <SmartTopBar pageTitle="–ú–æ–∏ –∫—É—Ä—Å—ã" />

        {error && (
          <div className="error-message">
            {error}
          </div>
        )}

        <section className="courses-section">
          <div className="section-header">
            <h2 className="section-label">–ö—É—Ä—Å—ã –ø–æ–¥ –≤–∞—à–∏–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º</h2>
            <span className="course-count">{myCourses.length} –∫—É—Ä—Å(–æ–≤)</span>
          </div>
          
          {myCourses.length ? (
            <div className="courses-grid">
              {myCourses.map(course => renderCourseCard(course))}
            </div>
          ) : (
            <div className="empty-state">
              <div className="empty-icon">üë©‚Äçüè´</div>
              <h3>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –∫—É—Ä—Å–æ–≤</h3>
              <p>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –Ω–∞–∑–Ω–∞—á–∏—Ç—å –≤–∞—Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º –∫—É—Ä—Å–∞ –∏–ª–∏ –≥—Ä—É–ø–ø—ã —Å –∫—É—Ä—Å–∞–º–∏</p>
            </div>
          )}
        </section>
      </div>
    </div>
  );
}
